// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ArrangerService.proto

#ifndef PROTOBUF_proto_2fArrangerService_2eproto__INCLUDED
#define PROTOBUF_proto_2fArrangerService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include "proto/heartbeat.pb.h"
// @@protoc_insertion_point(includes)

namespace fdis {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fArrangerService_2eproto();
void protobuf_AssignDesc_proto_2fArrangerService_2eproto();
void protobuf_ShutdownFile_proto_2fArrangerService_2eproto();


// ===================================================================


// ===================================================================

class ArrangerService_Stub;

class ArrangerService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ArrangerService() {};
 public:
  virtual ~ArrangerService();

  typedef ArrangerService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void echo(::google::protobuf::RpcController* controller,
                       const ::fdis::HeartbeatRequest* request,
                       ::fdis::HeartbeatResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ArrangerService);
};

class ArrangerService_Stub : public ArrangerService {
 public:
  ArrangerService_Stub(::google::protobuf::RpcChannel* channel);
  ArrangerService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ArrangerService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ArrangerService ------------------------------------------

  void echo(::google::protobuf::RpcController* controller,
                       const ::fdis::HeartbeatRequest* request,
                       ::fdis::HeartbeatResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ArrangerService_Stub);
};


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace fdis

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fArrangerService_2eproto__INCLUDED
