// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/heartbeat.proto

#ifndef PROTOBUF_proto_2fheartbeat_2eproto__INCLUDED
#define PROTOBUF_proto_2fheartbeat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace fdis {
class HeartbeatRequest;
class HeartbeatRequestDefaultTypeInternal;
extern HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
class HeartbeatResponse;
class HeartbeatResponseDefaultTypeInternal;
extern HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;
}  // namespace fdis

namespace fdis {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fheartbeat_2eproto();
void protobuf_InitDefaults_proto_2fheartbeat_2eproto();

// ===================================================================

class HeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fdis.HeartbeatRequest) */ {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  static inline const HeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartbeatRequest*>(
               &_HeartbeatRequest_default_instance_);
  }

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required int64 timemills = 3;
  bool has_timemills() const;
  void clear_timemills();
  static const int kTimemillsFieldNumber = 3;
  ::google::protobuf::int64 timemills() const;
  void set_timemills(::google::protobuf::int64 value);

  // required int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fdis.HeartbeatRequest)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_timemills();
  void clear_has_timemills();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int64 timemills_;
  friend void  protobuf_InitDefaults_proto_2fheartbeat_2eproto_impl();
  friend void  protobuf_AddDesc_proto_2fheartbeat_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_proto_2fheartbeat_2eproto();
  friend void protobuf_ShutdownFile_proto_2fheartbeat_2eproto();

};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fdis.HeartbeatResponse) */ {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  static inline const HeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartbeatResponse*>(
               &_HeartbeatResponse_default_instance_);
  }

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline HeartbeatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required int64 timemills = 2;
  bool has_timemills() const;
  void clear_timemills();
  static const int kTimemillsFieldNumber = 2;
  ::google::protobuf::int64 timemills() const;
  void set_timemills(::google::protobuf::int64 value);

  // required string type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:fdis.HeartbeatResponse)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_timemills();
  void clear_has_timemills();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 timemills_;
  friend void  protobuf_InitDefaults_proto_2fheartbeat_2eproto_impl();
  friend void  protobuf_AddDesc_proto_2fheartbeat_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_proto_2fheartbeat_2eproto();
  friend void protobuf_ShutdownFile_proto_2fheartbeat_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRequest

// required int32 id = 1;
inline bool HeartbeatRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HeartbeatRequest::id() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatRequest.id)
  return id_;
}
inline void HeartbeatRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatRequest.id)
}

// required int64 timestamp = 2;
inline bool HeartbeatRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRequest::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 HeartbeatRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatRequest.timestamp)
  return timestamp_;
}
inline void HeartbeatRequest::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatRequest.timestamp)
}

// required int64 timemills = 3;
inline bool HeartbeatRequest::has_timemills() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeartbeatRequest::set_has_timemills() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeartbeatRequest::clear_has_timemills() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeartbeatRequest::clear_timemills() {
  timemills_ = GOOGLE_LONGLONG(0);
  clear_has_timemills();
}
inline ::google::protobuf::int64 HeartbeatRequest::timemills() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatRequest.timemills)
  return timemills_;
}
inline void HeartbeatRequest::set_timemills(::google::protobuf::int64 value) {
  set_has_timemills();
  timemills_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatRequest.timemills)
}

// required int32 port = 4;
inline bool HeartbeatRequest::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartbeatRequest::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartbeatRequest::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartbeatRequest::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 HeartbeatRequest::port() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatRequest.port)
  return port_;
}
inline void HeartbeatRequest::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatRequest.port)
}

// -------------------------------------------------------------------

// HeartbeatResponse

// required int64 timestamp = 1;
inline bool HeartbeatResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 HeartbeatResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatResponse.timestamp)
  return timestamp_;
}
inline void HeartbeatResponse::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatResponse.timestamp)
}

// required int64 timemills = 2;
inline bool HeartbeatResponse::has_timemills() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartbeatResponse::set_has_timemills() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartbeatResponse::clear_has_timemills() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartbeatResponse::clear_timemills() {
  timemills_ = GOOGLE_LONGLONG(0);
  clear_has_timemills();
}
inline ::google::protobuf::int64 HeartbeatResponse::timemills() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatResponse.timemills)
  return timemills_;
}
inline void HeartbeatResponse::set_timemills(::google::protobuf::int64 value) {
  set_has_timemills();
  timemills_ = value;
  // @@protoc_insertion_point(field_set:fdis.HeartbeatResponse.timemills)
}

// required string type = 3;
inline bool HeartbeatResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatResponse::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& HeartbeatResponse::type() const {
  // @@protoc_insertion_point(field_get:fdis.HeartbeatResponse.type)
  return type_.GetNoArena();
}
inline void HeartbeatResponse::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fdis.HeartbeatResponse.type)
}
inline void HeartbeatResponse::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fdis.HeartbeatResponse.type)
}
inline void HeartbeatResponse::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fdis.HeartbeatResponse.type)
}
inline ::std::string* HeartbeatResponse::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:fdis.HeartbeatResponse.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartbeatResponse::release_type() {
  // @@protoc_insertion_point(field_release:fdis.HeartbeatResponse.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartbeatResponse::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:fdis.HeartbeatResponse.type)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace fdis

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fheartbeat_2eproto__INCLUDED
